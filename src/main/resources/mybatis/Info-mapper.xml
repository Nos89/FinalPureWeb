<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Info">

	<select id="login" resultType="Integer">
		select count(*) from users where
		id=#{id} and pw=#{pw}
	</select>
	
	<select id="getName" resultType="String">
		select name from users where id=#{id} and pw=#{pw}
	</select>
	
	<select id="getMajor" resultType="String">
		select dept_title from department where dept_code=(select deptcode from users where id=#{id} and pw=#{pw})
	</select>		
	
	<!-- 학사게시글 최근 6개 -->
	<select id="recentStd" resultType="kh.spring.dto.InfoBoardDTO">
 		SELECT * FROM (SELECT BOARD_NOTICE.*, ROW_NUMBER() OVER(ORDER BY NOTI_WRITEDATE DESC) N
					FROM BOARD_NOTICE  where category='학사') WHERE (N BETWEEN 1 AND 6)
	</select>
	<!-- 장학게시글 최근 6개 -->
	<select id="recentScholar" resultType="kh.spring.dto.InfoBoardDTO">
		SELECT * FROM (SELECT BOARD_NOTICE.*, ROW_NUMBER() OVER(ORDER BY NOTI_WRITEDATE DESC) N
					FROM BOARD_NOTICE  where category='장학') WHERE (N BETWEEN 1 AND 6)
	</select>
	<!-- 입학게시글 최근 6개 -->
	<select id="recentEnter" resultType="kh.spring.dto.InfoBoardDTO">
		SELECT * FROM (SELECT BOARD_NOTICE.*, ROW_NUMBER() OVER(ORDER BY NOTI_WRITEDATE DESC) N
					FROM BOARD_NOTICE  where category='입학') WHERE (N BETWEEN 1 AND 6)
	</select>
	
	<!-- 수강과목 (학생), 강의시간표-->
	<select id="takingClass_std" resultType="kh.spring.dto.TakingClassDTO">
	    select lec_isu,lec_title,lec_schedule,lec_classroom from lecture 
		where lec_code in 
			(select lec_code from classregistration where cr_divide='정기' and cr_completediv='완료상태' and  id=#{id} and to_char(cr_date, 'yyyymmdd') = to_char(#{classRegDate},'yyyymmdd'))			
	</select>
	
	<!-- 강의과목 (교수), 강의시간표-->
	<select id="takingClass_pro" resultType="kh.spring.dto.TakingClassDTO">
		select lec_isu,lec_title,lec_score,lec_schedule,lec_classroom from lecture 
		where lec_code IN  
			(select oc_code from open_class where oc_semester=#{semester}  and to_char(oc_year, 'yyyymmdd') = to_char(#{classOpenDate},'yyyymmdd') AND oc_pro_code=#{id})
	</select>
	
	
	<!--학사일정 -->
	<select id="getColSchedule" resultType="kh.spring.dto.ColScheduleDTO">
 		 select * from Col_schedule  
 		 where to_char(sche_startdate, 'yyyymmdd') like '%'||to_char(#{value}, 'yyyymm')||'%'
 		 	or to_char(sche_enddate, 'yyyymmdd') like '%'||to_char(#{value}, 'yyyymm')||'%' order by sche_startdate asc
	</select>
	
	
	<!--로그인 페이지, 최근 4개 학사일정 -->
	<select id="get4ColSchedule" resultType="kh.spring.dto.ColScheduleDTO">
 		SELECT * FROM (SELECT Col_schedule.*, ROW_NUMBER() OVER(ORDER BY sche_startdate DESC) N
					FROM Col_schedule  where to_char(sche_startdate, 'yyyymmdd') like '%'||to_char(#{value}, 'yyyymm')||'%' or to_char(sche_enddate, 'yyyymmdd') like '%'||to_char(#{value}, 'yyyymm')||'%' order by sche_startdate asc) 
					WHERE (N BETWEEN 1 AND 4)
					
	</select>
	<!-- 아이디 비번 찾기 -->
	<select id="findIDPW" resultType="String">
		select id from users where name = #{userName} and phone = #{pn} and 
		<choose>
			<when test="find == 'id'">
				id like #{userType}||'%'
			</when>
			<when test="find == 'pw'">
				id = #{userID}
			</when>
		</choose>
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="changePW">
		update users set pw = #{pw} where id = #{id}
	</update>
	
	<select id="getUnreadMailNum" resultType="Integer">
		SELECT COUNT(*) FROM MAIL WHERE RECEIVER=#{id} AND READ=0
	</select>
</mapper>